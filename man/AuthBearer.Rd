% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auth_bearer.R
\name{AuthBearer}
\alias{AuthBearer}
\title{R6 class for the Bearer authentication scheme}
\description{
This class encapsulates the logic of the
\href{https://datatracker.ietf.org/doc/html/rfc6750}{Bearer authentication scheme}.
See \code{\link[=auth_bearer]{auth_bearer()}} for more information.
}
\section{Super class}{
\code{\link[fireproof:Auth]{fireproof::Auth}} -> \code{AuthBearer}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{open_api}}{An OpenID compliant security scheme description}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AuthBearer-new}{\code{AuthBearer$new()}}
\item \href{#method-AuthBearer-check_request}{\code{AuthBearer$check_request()}}
\item \href{#method-AuthBearer-reject_response}{\code{AuthBearer$reject_response()}}
\item \href{#method-AuthBearer-forbid_user}{\code{AuthBearer$forbid_user()}}
\item \href{#method-AuthBearer-clone}{\code{AuthBearer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthBearer-new"></a>}}
\if{latex}{\out{\hypertarget{method-AuthBearer-new}{}}}
\subsection{Method \code{new()}}{
Constructor for the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthBearer$new(
  authenticator,
  realm = "private",
  allow_body_token = TRUE,
  allow_query_token = FALSE,
  name = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{authenticator}}{A function that takes a token, realm, request, and
response and returns \code{TRUE} if the token is valid, and \code{FALSE}
otherwise. If the function sets a character vector of scopes for the token in
the \code{auth_scope} field of the response data
(\code{response$set_data("auth_scope", ...)}) then it will be tested against the
scopes needed for the specific endpoint}

\item{\code{realm}}{The realm this authentication corresponds to. Will be returned
to the client on a failed authentication attempt to inform them of the
credentials required, though most often these days it is kept from the user.}

\item{\code{allow_body_token}}{Should it be allowed to pass the token in the request
body as a query form type with the \code{access_token} name. Defaults to \code{TRUE}
but you can turn it off to force the client to use the \code{Authorization}
header.}

\item{\code{allow_query_token}}{Should it be allowed to pass the token in the query
string of the url with the \code{access_token} name. Default to \code{FALSE} due to
severe security implications but can be turned on if you have very
well-thought-out reasons to do so.}

\item{\code{name}}{The name of the authentication}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthBearer-check_request"></a>}}
\if{latex}{\out{\hypertarget{method-AuthBearer-check_request}{}}}
\subsection{Method \code{check_request()}}{
A function that validates an incoming request, returning
\code{TRUE} if it is valid and \code{FALSE} if not. It fetches the token from the
request according to the \code{allow_body_token} and \code{allow_query_token}
settings and validates it according to the provided authenticator. If the
token is present multiple times it will fail with \code{400} is this is not
allowed. It will store the token in the \code{auth_token} field of the
response data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthBearer$check_request(request, response, keys, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{request}}{The request to validate as a \link[reqres:Request]{Request}
object}

\item{\code{response}}{The corresponding response to the request as a
\link[reqres:Response]{Response} object}

\item{\code{keys}}{A named list of path parameters from the path matching}

\item{\code{...}}{Ignored}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthBearer-reject_response"></a>}}
\if{latex}{\out{\hypertarget{method-AuthBearer-reject_response}{}}}
\subsection{Method \code{reject_response()}}{
Upon rejection this scheme sets the response status to \code{401}
and sets the \code{WWW-Authenticate} header to \verb{Bearer realm="<realm>"}. If
any scope is provided by the endpoint it will be appended as
\verb{, scope="<scope>"} and if the token is present but invalid, it will
append \verb{, error="invalid_token"}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthBearer$reject_response(response, scope)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{response}}{The response object}

\item{\code{scope}}{The scope of the endpoint}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthBearer-forbid_user"></a>}}
\if{latex}{\out{\hypertarget{method-AuthBearer-forbid_user}{}}}
\subsection{Method \code{forbid_user()}}{
Upon rejection due to insufficient permission this scheme
sets the response to \code{403} and sets the \code{WWW-Authenticate} header to
\verb{Bearer realm="<realm>", scope="<scope>", error="insufficient_scope"}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthBearer$forbid_user(response, scope)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{response}}{The response object}

\item{\code{scope}}{The scope of the endpoint}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthBearer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AuthBearer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthBearer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
