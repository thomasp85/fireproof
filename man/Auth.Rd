% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Auth.R
\name{Auth}
\alias{Auth}
\alias{is_auth}
\title{R6 base class for authentication schemes}
\usage{
is_auth(x)
}
\arguments{
\item{x}{An object}
}
\description{
All schemes inherit from this base class and adapts it for the particular
scheme it implements. Additional schemes can be implemented as subclasses of
this and will work transparently with fireproof.
}
\examples{
# You'd never actually do this, rather you'd use the subclasses
auth <- Auth$new(name = "base_auth")

}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{name}}{The name of the instance}

\item{\code{open_api}}{An OpenID compliant security scheme description}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Auth-new}{\code{Auth$new()}}
\item \href{#method-Auth-check_request}{\code{Auth$check_request()}}
\item \href{#method-Auth-reject_response}{\code{Auth$reject_response()}}
\item \href{#method-Auth-forbid_user}{\code{Auth$forbid_user()}}
\item \href{#method-Auth-register_handler}{\code{Auth$register_handler()}}
\item \href{#method-Auth-clone}{\code{Auth$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Auth-new"></a>}}
\if{latex}{\out{\hypertarget{method-Auth-new}{}}}
\subsection{Method \code{new()}}{
Constructor for the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Auth$new(name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the scheme instance}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Auth-check_request"></a>}}
\if{latex}{\out{\hypertarget{method-Auth-check_request}{}}}
\subsection{Method \code{check_request()}}{
A function that validates an incoming request, returning
\code{TRUE} if it is valid and \code{FALSE} if not. The base class simply returns
\code{TRUE} for all requests
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Auth$check_request(request, response, keys, ..., .session)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{request}}{The request to validate as a \link[reqres:Request]{Request}
object}

\item{\code{response}}{The corresponding response to the request as a
\link[reqres:Response]{Response} object}

\item{\code{keys}}{A named list of path parameters from the path matching}

\item{\code{...}}{Ignored}

\item{\code{.session}}{The session storage for the current session}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Auth-reject_response"></a>}}
\if{latex}{\out{\hypertarget{method-Auth-reject_response}{}}}
\subsection{Method \code{reject_response()}}{
Action to perform on the response in case the request fails
to get validated by any instance in the flow. All failing instances will
have this method called one by one so be mindful if you are overwriting
information set by another instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Auth$reject_response(response, scope, ..., .session)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{response}}{The response object}

\item{\code{scope}}{The scope of the endpoint}

\item{\code{...}}{Ignored}

\item{\code{.session}}{The session storage for the current session}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Auth-forbid_user"></a>}}
\if{latex}{\out{\hypertarget{method-Auth-forbid_user}{}}}
\subsection{Method \code{forbid_user()}}{
Action to perform on the response in case the request does
not have the necessary permissions for the endpoint. All succeeding
instances will have this method called one by one if permissions are
insufficient so be mindful if you are overwriting information set by
another instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Auth$forbid_user(response, scope, ..., .session)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{response}}{The response object}

\item{\code{scope}}{The scope of the endpoint}

\item{\code{...}}{Ignored}

\item{\code{.session}}{The session storage for the current session}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Auth-register_handler"></a>}}
\if{latex}{\out{\hypertarget{method-Auth-register_handler}{}}}
\subsection{Method \code{register_handler()}}{
Hook for registering endpoint handlers needed for this
authentication method
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Auth$register_handler(add_handler)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{add_handler}}{The \code{add_handler} method from \link{Fireproof} to be called
for adding additional handlers}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Auth-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Auth-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Auth$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
