% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auth_key.R
\name{auth_key}
\alias{auth_key}
\title{Authentication based on shared secret}
\usage{
auth_key(key, secret, cookie = TRUE, name = "KeyAuth")
}
\arguments{
\item{key}{The name of the header or cookie to store the secret under}

\item{secret}{The secret to check for. Either a single string with the secret
or a function that takes a value and returns \code{TRUE} if its a valid secret
(useful if you have multiple or rotating secrets). Make sure never to store
secrets in plain text and avoid checking them into version control.}

\item{cookie}{Boolean. Should the secret be transmitted as a cookie. If
\code{FALSE} it is expected to be transmitted as a header.}

\item{name}{The name of the authentication}
}
\value{
A \code{AuthBasic} object
}
\description{
This authentication scheme is based on a mutually shared secret between the
server and the client. The client provides this secret either as a header or
in a cookie, and the server verifies the authenticity of the secret. Like
with \link[=auth_basic]{basic authentication}, this scheme relies on additional
technology like HTTPS/SSL to make it secure since the secret can otherwise
easily be extracted from the request by man-in-the-middle attack.
}
\details{
This authentication is not a classic HTTP authentication scheme and thus
doesn't return a \code{401} response with a \code{WWW-Authenticate} header. Instead it
returns a \code{400} response unless another authenticator has already set the
response status to something else.
}
